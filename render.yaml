services:
  # Web service (Flask + gunicorn)
  - type: web
    name: bcq-web
    env: python
    plan: starter
    region: oregon
    buildCommand: |
      apt-get update && apt-get install -y build-essential
      pip install --upgrade pip
      pip install -r requirements.txt
    startCommand: |
      gunicorn -w 2 -k gthread -b 0.0.0.0:$PORT data_ingestion.main:app
    healthCheckPath: /
    autoDeploy: true
    envVars:
      - key: PYTHON_VERSION
        value: "3.11.9"
      - key: ENV
        value: production
      # Point to the live Alpaca API by default
      - key: ALPACA_BASE_URL
        value: "https://api.alpaca.markets"
      # Use IEX feed on free accounts; change to "sip" if your subscription supports it
      - key: ALPACA_FEED
        value: "sip"
      # Number of days to backfill when triggered via POST /ingest (cron uses its own value)
      - key: BACKFILL_DAYS
        value: "5"
      # Add your Tiingo API key here or in the Render dashboard
      - key: TIINGO_API_KEY
        value: ""
      # Database connection string injected from the managed Postgres service
      - key: DATABASE_URL
        fromDatabase:
          name: bcq-db
          property: connectionString

  # Worker service used for manual backfills or on‑demand ingestion
  - type: worker
    name: bcq-worker
    env: python
    plan: starter
    region: oregon
    buildCommand: |
      apt-get update && apt-get install -y build-essential
      pip install --upgrade pip
      pip install -r requirements.txt
    startCommand: |
      python -m data_ingestion.run_daily
    autoDeploy: true
    envVars:
      - key: PYTHON_VERSION
        value: "3.11.9"
      - key: ENV
        value: production
      - key: ALPACA_BASE_URL
        value: "https://api.alpaca.markets"
      - key: ALPACA_FEED
        value: "sip"
      # The worker will backfill this many days of data on startup; adjust for large one‑off jobs
      - key: BACKFILL_DAYS
        value: "3650"
      # Add your Tiingo API key here or in the Render dashboard
      - key: TIINGO_API_KEY
        value: ""
      - key: DATABASE_URL
        fromDatabase:
          name: bcq-db
          property: connectionString

  # Cron job to run ingestion on a schedule (weekdays at 13:00 UTC ≈ 8 AM US/Central)
  - type: cron
    name: bcq-cron-daily
    env: python
    plan: starter
    region: oregon
    schedule: "0 13 * * MON-FRI"
    buildCommand: |
      apt-get update && apt-get install -y build-essential
      pip install --upgrade pip
      pip install -r requirements.txt
    startCommand: |
      python -m data_ingestion.run_daily
    envVars:
      - key: PYTHON_VERSION
        value: "3.11.9"
      - key: ENV
        value: production
      - key: ALPACA_BASE_URL
        value: "https://api.alpaca.markets"
      - key: ALPACA_FEED
        value: "sip"
      # Cron jobs should backfill only a couple of days to stay fresh
      - key: BACKFILL_DAYS
        value: "2"
      # Add your Tiingo API key here or in the Render dashboard
      - key: TIINGO_API_KEY
        value: ""
      - key: DATABASE_URL
        fromDatabase:
          name: bcq-db
          property: connectionString

databases:
  - name: bcq-db
    plan: basic-4gb
    region: oregon
    postgresMajorVersion: "16"
    diskSizeGB: 30


