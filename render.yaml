services:
  # -----------------------------
  # Web UI (read-only Streamlit)
  # -----------------------------
  - type: web
    name: smallcap-quant
    runtime: docker
    dockerfilePath: Dockerfile
    envVars:
      - key: DATABASE_URL
        sync: false
      - key: APCA_API_KEY_ID
        sync: false
      - key: APCA_API_SECRET_KEY
        sync: false
      - key: APCA_API_BASE_URL
        value: https://api.alpaca.markets   # live base URL
      - key: ALPACA_DATA_FEED
        value: sip                          # use 'iex' if you don't have SIP entitlement
      - key: POLYGON_API_KEY
        sync: false
      - key: TIINGO_API_KEY
        sync: false
      - key: PYTHONPATH
        value: /app
      # The entrypoint defaults SERVICE=web APP_MODE=streamlit

  # -----------------------------
  # Worker (on-demand compute)
  # -----------------------------
  - type: worker
    name: quant-worker
    runtime: docker
    dockerfilePath: Dockerfile
    envVars:
      - key: SERVICE
        value: worker                       # entrypoint will run: python -m jobs.worker
      - key: WORKER_TASK
        value: idle                         # stays alive; exec tasks via Shell or override
      - key: PYTHONPATH
        value: /app
      - key: DATABASE_URL
        sync: false
      - key: APCA_API_KEY_ID
        sync: false
      - key: APCA_API_SECRET_KEY
        sync: false
      - key: APCA_API_BASE_URL
        value: https://api.alpaca.markets
      - key: ALPACA_DATA_FEED
        value: sip                          # or 'iex'
      - key: POLYGON_API_KEY
        sync: false
      - key: TIINGO_API_KEY
        sync: false
      # Optional toggles used by your code:
      # - key: SYNC_TO_BROKER
      #   value: "false"
      # - key: LOG_LEVEL
      #   value: INFO

  # ---------------------------------------------------------
  # Cron: refresh universe (Mon 09:00 CT = 14:00 UTC)
  # Entry point already runs Alembic; just run the module.
  # ---------------------------------------------------------
  - type: cron
    name: refresh-universe
    runtime: docker
    dockerfilePath: Dockerfile
    schedule: "0 14 * * 1"
    dockerCommand: "python -m data.universe"
    envVars:
      - key: DATABASE_URL
        sync: false
      - key: APCA_API_KEY_ID
        sync: false
      - key: APCA_API_SECRET_KEY
        sync: false
      - key: APCA_API_BASE_URL
        value: https://api.alpaca.markets
      - key: ALPACA_DATA_FEED
        value: sip                          # or 'iex'
      - key: POLYGON_API_KEY
        sync: false
      - key: TIINGO_API_KEY
        sync: false
      - key: PYTHONPATH
        value: /app
      # Bootstrap tweak so the job doesn't fail when ADV is missing:
      - key: ADV_USD_MIN
        value: "-1"                         # revert later when Polygon ADV is flowing

  # --------------------------------------------------------------
  # Cron: ingest recent bars (Mon–Fri 16:45 CT ≈ 21:45 UTC)
  # --------------------------------------------------------------
  - type: cron
    name: ingest-recent
    runtime: docker
    dockerfilePath: Dockerfile
    schedule: "45 21 * * 1-5"
    dockerCommand: "python -m data.ingest --days 7"
    envVars:
      - key: DATABASE_URL
        sync: false
      - key: APCA_API_KEY_ID
        sync: false
      - key: APCA_API_SECRET_KEY
        sync: false
      - key: APCA_API_BASE_URL
        value: https://api.alpaca.markets
      - key: ALPACA_DATA_FEED
        value: sip                          # or 'iex'
      - key: POLYGON_API_KEY
        sync: false
      - key: TIINGO_API_KEY
        sync: false
      - key: PYTHONPATH
        value: /app

  # --------------------------------------------------------------
  # Cron: full EOD pipeline (Mon–Fri 17:30 CT ≈ 22:30 UTC)
  # --------------------------------------------------------------
  - type: cron
    name: eod-pipeline
    runtime: docker
    dockerfilePath: Dockerfile
    schedule: "30 22 * * 1-5"
    dockerCommand: "python run_pipeline.py"
    envVars:
      - key: DATABASE_URL
        sync: false
      - key: APCA_API_KEY_ID
        sync: false
      - key: APCA_API_SECRET_KEY
        sync: false
      - key: APCA_API_BASE_URL
        value: https://api.alpaca.markets
      - key: ALPACA_DATA_FEED
        value: sip                          # or 'iex'
      - key: POLYGON_API_KEY
        sync: false
      - key: TIINGO_API_KEY
        sync: false
      - key: PYTHONPATH
        value: /app
      # Optional: gating / blend controls used by models.ml
      # - key: BLEND_WEIGHTS
      #   value: "xgb:0.5,rf:0.3,ridge:0.2"
      # - key: REGIME_GATING
      #   value: "true"
